{"version":3,"sources":["helperFunctions.js","actions/types.js","reducers/postReducer.js","reducers/userReducer.js","reducers/usersReducer.js","reducers/index.js","store.js","actions/postActions.js","components/Post.js","components/CreatePost.js","components/LeftNavBar.js","components/Loading.js","pages/home/Home.js","actions/userActions.js","actions/usersActions.js","pages/profile/Profile.js","components/AppNavBar.js","pages/users/Users.js","pages/login/Login.js","pages/register/Register.js","App.js","index.js"],"names":["calculateTime","timestamp","date","Date","now","days","getDate","hours","getHours","minutes","getMinutes","GET_POSTS","ADD_POST","DELETE_POST","UPDATE_POST","LIKE_POST","UNLIKE_POST","EDIT_COMMENT","DELETE_COMMENT","LOGIN","LOGOUT","GET_USER","UPDATE_USER","UPLOAD_PICTURE","SEND_INVITATION","ACCEPT_INVITATION","GET_USERS","initialState","user","isLogged","combineReducers","posts","state","action","type","payload","filter","post","_id","postId","map","message","likers","userId","id","comments","comment","commentId","text","biographie","firstName","lastName","picture","invitationlist","senderId","friendlist","users","receiverId","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getPosts","dispatch","axios","get","then","res","data","Post","useDispatch","getState","useState","liked","setLiked","likeList","setLikeList","commentList","setCommentList","setComment","editCommentForm","setEditCommentForm","newComment","setNewComment","editPostForm","setEditPostForm","newMessage","setNewMessage","useEffect","includes","style","backgroundColor","className","Navbar","bg","border","Container","to","posterId","Brand","Image","src","length","avatar","roundedCircle","width","height","alt","time","Dropdown","Toggle","as","icon","faDots","size","Menu","Item","onClick","Modal","show","onHide","backdrop","Header","closeButton","Title","Body","Form","Group","Label","Control","rows","placeholder","onChange","e","target","value","Footer","Button","variant","window","confirm","put","catch","err","console","log","alert","delete","Row","Col","color","faHeartFilled","patch","faHeart","aria-labelledby","centered","faComment","Media","commenterId","faShareSquare","onSubmit","preventDefault","CreatePost","setMessage","file","setFile","FormData","append","addPost","File","label","files","LeftNavBar","props","class","Loading","Spinner","animation","role","Home","useSelector","Object","keys","xs","index","friendId","href","faCircle","getUser","getUsers","Profile","profileId","useParams","editProfile","setEditProfile","newFirstName","setNewFirstName","newLastName","setNewLastName","newBio","setNewBio","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","column","sm","pseudo","uploadPicture","find","faUserCheck","faUserTimes","faUserPlus","createdAt","AppNavBar","sticky","Collapse","Nav","Link","faHome","faCommentDots","faUsers","faSignOutAlt","Users","search","setSearch","fluid","InputGroup","FormControl","Append","faSearch","toLowerCase","faCheckSquare","Login","email","setEmail","password","setPassword","loading","setLoading","required","login","Register","username","setUsername","setFirstName","setLastName","repeatedPassword","setRepeatedPassword","register","setRegister","minLength","App","jwt","Cookies","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.beed43c1.chunk.js","sourcesContent":["const calculateTime = (timestamp) => {\r\n    let date = new Date(Date.now() - timestamp);\r\n\r\n    let days = date.getDate();\r\n    if (days) {\r\n        return days + \" days ago\";\r\n    }\r\n    let hours = date.getHours();\r\n    if (hours) {\r\n        return hours;\r\n    }\r\n    let minutes = date.getMinutes();\r\n    if (minutes) {\r\n        return minutes + \" minutes ago\";\r\n    }\r\n    return \"few seconds ago\"\r\n}\r\n\r\nexport default calculateTime;","export const GET_POSTS = 'GET_POSTS';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const UPDATE_POST = 'UPDATE_POST';\r\nexport const POSTS_LOADING = 'POSTS_LOADING';\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const UNLIKE_POST = 'UNLIKE_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\n\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_USER = 'GET_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPLOAD_PICTURE = 'UPLOAD_PICTURE';\r\nexport const SEND_INVITATION = 'SEND_INVITATION';\r\nexport const ACCEPT_INVITATION = 'ACCEPT_INVITATION';\r\n\r\nexport const GET_USERS = 'GET_USERS';","import {GET_POSTS, ADD_POST,UPDATE_POST, DELETE_POST, LIKE_POST, UNLIKE_POST, EDIT_COMMENT, DELETE_COMMENT} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET_POSTS: \r\n            return action.payload;\r\n        case DELETE_POST: \r\n            return state.filter((post) => post._id !== action.payload.postId);\r\n        case ADD_POST:\r\n            return [action.payload, ...state];\r\n        case UPDATE_POST:\r\n            return state.map((post) => {\r\n                if (post._id === action.payload.postId) {\r\n                return {\r\n                    ...post,\r\n                    message: action.payload.message,\r\n                };\r\n                } else return post;\r\n            });\r\n        case LIKE_POST:\r\n            return state.map((post) => {\r\n                if (post._id === action.payload.postId) {\r\n                  return {\r\n                    ...post,\r\n                    likers: [action.payload.userId, ...post.likers],\r\n                  };\r\n                }\r\n                return post;\r\n            });\r\n        case UNLIKE_POST:\r\n            return state.map((post) => {\r\n                if (post._id === action.payload.postId) {\r\n                return {\r\n                    ...post,\r\n                    likers: post.likers.filter((id) => id !== action.payload.userId),\r\n                };\r\n                }\r\n                return post;\r\n            });\r\n        // case ADD_COMMENT:\r\n        //     return state.map((post) => {\r\n        //         if (post._id === action.payload.postId) {\r\n        //             return {\r\n        //             ...post,\r\n        //             comments: action.payload.comments,\r\n        //             };\r\n        //         }\r\n        //         return post;\r\n        //     });\r\n        case EDIT_COMMENT:\r\n            return state.map((post) => {\r\n                if (post._id === action.payload.postId) {\r\n                return {\r\n                    ...post,\r\n                    comments: post.comments.map((comment) => {\r\n                    if (comment._id === action.payload.commentId) {\r\n                        return {\r\n                        ...comment,\r\n                        text: action.payload.text,\r\n                        };\r\n                    } else {\r\n                        return comment;\r\n                    }\r\n                    }),\r\n                };\r\n                } else return post;\r\n            });\r\n        case DELETE_COMMENT:\r\n            return state.map((post) => {\r\n                if (post._id === action.payload.postId) {\r\n                return {\r\n                    ...post,\r\n                    comments: post.comments.filter(\r\n                    (comment) => comment._id !== action.payload.commentId\r\n                    ),\r\n                };\r\n                } else return post;\r\n            });\r\n        default: return state;\r\n    }\r\n}","import {ACCEPT_INVITATION, GET_USER, LOGIN, LOGOUT, UPDATE_USER, UPLOAD_PICTURE} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user : [],\r\n    isLogged: false\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET_USER: \r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            };\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    biographie: action.payload.biographie,\r\n                    firstName: action.payload.firstName,\r\n                    lastName: action.payload.lastName \r\n                },\r\n            };\r\n        case UPLOAD_PICTURE:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    picture: action.payload,\r\n                },\r\n            };\r\n        case ACCEPT_INVITATION:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    invitationlist: state.user.invitationlist.filter(id => id !== action.payload.senderId),\r\n                    friendlist: [action.payload.senderId, ...state.user.friendlist]\r\n                },\r\n            };\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                isLogged: true\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLogged: false\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n","import {GET_USERS, SEND_INVITATION} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return action.payload;\r\n    case SEND_INVITATION:\r\n      return state.map((user) => {\r\n          if (user._id === action.payload.receiverId) {\r\n            return {\r\n                ...user,\r\n                invitationlist: [action.payload.senderId, ...user.invitationlist],\r\n            };\r\n          } else return user;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport postReducer from './postReducer';\r\nimport userReducer from './userReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts : postReducer,\r\n    user: userReducer,\r\n    users : usersReducer\r\n});\r\n\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n));\r\n\r\nexport default store;","import axios from 'axios';\r\nimport {GET_POSTS, ADD_POST, UPDATE_POST, DELETE_POST, LIKE_POST, UNLIKE_POST, ADD_COMMENT, DELETE_COMMENT, EDIT_COMMENT} from './types';\r\n\r\nexport const getPosts = () => dispatch => {\r\n    axios\r\n        .get('/api/posts/')\r\n        .then(res => {\r\n            dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })});\r\n};\r\n\r\n\r\nexport const addPost = data => dispatch => {\r\n    axios\r\n        .post('/api/posts', data)\r\n        .then(res => \r\n            dispatch({\r\n                type: ADD_POST,\r\n                payload: res.data\r\n            }))\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePost = (postId, message) => dispatch => {\r\n    axios\r\n        .put(`/api/posts/${postId}`, { message })\r\n        .then((res) => {\r\n            dispatch({ type: UPDATE_POST, payload: { message, postId } });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const deletePost = (postId) => dispatch => {\r\n    axios\r\n        .delete(`/api/posts/${postId}`)\r\n        .then((res) => \r\n            dispatch({ \r\n                type: DELETE_POST, \r\n                payload: { postId } \r\n            }))\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const likePost = (postId, userId) => dispatch => {\r\n    axios\r\n      .patch(`/api/posts/like-post/${postId}`, {id : userId})\r\n      .then((res) => {\r\n        dispatch({ type: LIKE_POST, payload: { postId, userId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const unlikePost = (postId, userId) => dispatch => {\r\n    axios\r\n      .patch(`/api/posts/unlike-post/${postId}`, { id: userId })\r\n      .then((res) => {\r\n        dispatch({ type: UNLIKE_POST, payload: { postId, userId } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const addComment = (postId, commenterId, text) => dispatch => {\r\n    axios\r\n      .patch(`/api/posts/comment-post/${postId}`, { commenterId, text })\r\n      .then((res) => {\r\n        dispatch({ type: ADD_COMMENT, payload: { comment: res.data.comments[res.data.comments.length - 1] } });\r\n      })\r\n      .catch((err) => console.log(err));\r\n};\r\n\r\nexport const editComment = (postId, commentId, text) => dispatch => {\r\n    axios\r\n        .patch(`api/posts/edit-comment-post/${postId}`, { commentId, text })\r\n        .then((res) => {\r\n            dispatch({ type: EDIT_COMMENT, payload: { postId, commentId, text } });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => dispatch => {\r\n  \r\n    axios\r\n        .patch(`/api/posts/delete-comment-post/${postId}`, { commentId })\r\n        .then((res) => {\r\n            dispatch({ \r\n              type: DELETE_COMMENT, \r\n              payload: { postId, commentId } });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n  \r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Navbar, Container, Row, Col, Image, Modal, Media, Form, Button, Dropdown} from 'react-bootstrap';\r\nimport { faHeart, faComment, faShareSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faHeart as faHeartFilled, faEllipsisH as faDots } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport calculateTime from '../helperFunctions';\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport store from '../store';\r\nimport { likePost, unlikePost, addComment, getPosts, deletePost, updatePost, deleteComment, editComment } from \"../actions/postActions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Post({post}) {\r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  const {user} = store.getState().user;\r\n  const users = store.getState().users;\r\n\r\n\r\n  const [liked, setLiked] = useState(false);\r\n  const [likeList, setLikeList] = useState(false);\r\n  const [commentList, setCommentList] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [editCommentForm, setEditCommentForm] = useState(false);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [editPostForm, setEditPostForm] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  \r\n\r\n  const like = () => {\r\n    dispatch(likePost(post._id, user._id));\r\n    setLiked(true);\r\n  }\r\n\r\n  const unlike = () => {\r\n    dispatch(unlikePost(post._id, user._id));\r\n    setLiked(false);\r\n  }\r\n\r\n  const handleComment = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (comment) {\r\n      dispatch(addComment(post._id, user._id, comment))\r\n      dispatch(getPosts());\r\n      setComment('');\r\n    } else {\r\n      alert(\"Please fill the form!\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (post.likers.includes(user._id)) setLiked(true);\r\n    else setLiked(false);\r\n  }, [user._id, post.likers, liked]);\r\n\r\n  return(\r\n    <div style={{backgroundColor: \"white\"}} className=\"mb-3 rounded\">\r\n      <Navbar bg=\"white\" style={{border: \"none\"}}>\r\n        <Container>\r\n        <Link to={`/${post.posterId}`}>\r\n          <Navbar.Brand>\r\n            <Image src={users.length ? users.filter(user => user._id === post.posterId)[0] ? users.filter(user => user._id === post.posterId)[0].avatar : null : null} roundedCircle width={40} height={40} alt=\"\" className=\"d-inline-block align-top\"/>\r\n            <span className=\"ml-3 font-weight-bold align-middle\">{users.length ? users.filter(user => user._id === post.posterId)[0]  ? users.filter(user => user._id === post.posterId)[0].firstName + \" \" + users.filter(user => user._id === post.posterId)[0].lastName : null : null}</span>\r\n          </Navbar.Brand>\r\n        </Link>\r\n          <span className=\"float-right align-top\">{calculateTime(comment.time)}</span>\r\n          {user._id === post.posterId ? \r\n            <Dropdown>\r\n              <Dropdown.Toggle as=\"image\">\r\n                <FontAwesomeIcon icon={faDots} size=\"md\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => setEditPostForm(true)} >Edit Post</Dropdown.Item>\r\n                <Modal\r\n                      size=\"md\"\r\n                      show={editPostForm}\r\n                      onHide={() => {\r\n                        setEditPostForm(false);\r\n                        setNewMessage(\"\");\r\n                      }}\r\n                      backdrop=\"static\"\r\n                    >\r\n                      <Modal.Header closeButton>\r\n                      <Modal.Title id=\"edit-post\">\r\n                          Edit your Post\r\n                      </Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                      <Form>\r\n                          <Form.Group>\r\n                              <Form.Label>Post</Form.Label>\r\n                              <Form.Control as=\"textarea\" rows={3} placeholder={post.message} onChange={(e) => setNewMessage(e.target.value)} value={newMessage}  />\r\n                          </Form.Group>\r\n                      </Form>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                          <Button variant=\"secondary\" onClick={() => {setEditPostForm(false); setNewMessage(\"\")}}>Cancel</Button>\r\n                          <Button variant=\"primary\" onClick={() => {\r\n                                                              if (newMessage && window.confirm(\"Are you sure you want to edit this post ?\")) {\r\n                                                                dispatch(updatePost(post._id, newMessage));\r\n                                                                setNewMessage(\"\");\r\n                                                                setEditPostForm(false);\r\n                                                              } else {\r\n                                                                alert(\"Please fill the form!\")\r\n                                                              }\r\n                          }}>Edit Post</Button>\r\n                      </Modal.Footer>\r\n                  </Modal>\r\n                <Dropdown.Item \r\n                  onClick={() => {\r\n                    if (window.confirm(\"Are you sure you want to delete this post ?\")) {\r\n                      dispatch(deletePost(post._id));\r\n                    }\r\n                    }}>\r\n                    Delete Post</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n           : null}\r\n          \r\n        </Container>\r\n      </Navbar>\r\n      <div className=\"mt-3\">\r\n        <p className=\"ml-4 mr-4 text-left\">{post.message}</p>\r\n        {post.picture ? <Image className=\"d-block w-100 h-100\" src={post.picture} alt=\"\" /> : null}\r\n        <Container className=\"pb-3 pt-3\">\r\n          <Row>\r\n            <Col>\r\n              <div className=\"text-center\">\r\n                <button style={{border: \"none\", backgroundColor: \"white\"}} >{liked ? <FontAwesomeIcon color=\"red\" icon={faHeartFilled} size=\"lg\" onClick={unlike}/> : <FontAwesomeIcon icon={faHeart} size=\"lg\" onClick={like} />}</button>\r\n                <a className=\"font-weight-bold align-top ml-2 text-dark\" onClick={() => setLikeList(true)}>{post.likers.length}</a>\r\n                <Modal\r\n                  size=\"md\"\r\n                  show={likeList}\r\n                  onHide={() => setLikeList(false)}\r\n                  aria-labelledby=\"like-list\"\r\n                  centered\r\n                >\r\n                  <Modal.Header closeButton>\r\n                  <Modal.Title id=\"like-list\">\r\n                      Likes ({post.likers.length})\r\n                  </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {post.likers.map(id => \r\n                      <div className=\"d-flex justify-content-between mb-2 pb-2 border-bottom\">\r\n                      <div className=\"d-flex align-items-center hover-pointer\">\r\n                          <img className=\"img-xs rounded-circle\" src={users.length ? users.filter(user => user._id === id)[0] ? users.filter(user => user._id === id)[0].avatar : null : null} alt=\"\" />\r\n                          <div className=\"ml-2 pt-3\">\r\n                              <p>{users.length ? users.filter(user => user._id === id)[0] ? users.filter(user => user._id === id)[0].firstName + \" \" + users.filter(user => user._id === id)[0].lastName : null : null}</p>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                    )}\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"text-center\">\r\n                <button style={{border: \"none\", backgroundColor: \"white\"}} ><FontAwesomeIcon icon={faComment} size=\"lg\"/></button>\r\n                <a className=\"font-weight-bold align-top ml-2 text-dark\" onClick={() => setCommentList(true)}>{post.comments.length}</a>\r\n                <Modal\r\n                  size=\"md\"\r\n                  show={commentList}\r\n                  onHide={() => setCommentList(false)}\r\n                  aria-labelledby=\"like-list\"\r\n                  centered\r\n                >\r\n                  <Modal.Header closeButton>\r\n                  <Modal.Title id=\"like-list\">\r\n                      Comments ({post.comments.length})\r\n                  </Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    {post.comments.map(comment => \r\n                      <Media>\r\n                        <Image className=\"ml-3\" \r\n                          src={users.filter(user => user._id === comment.commenterId).length ? users.filter(user => user._id === comment.commenterId)[0].avatar : null}\r\n                          roundedCircle width={30} height={30} alt=\"Profile image\"/>\r\n                        <Media.Body className=\"bg-light ml-3 mr-3 mb-3\">\r\n                            <h5>{users.filter(user => user._id === comment.commenterId).length ? users.filter(user => user._id === comment.commenterId)[0].firstName + \" \" + users.filter(user => user._id === comment.commenterId)[0].lastName : null}\r\n                            <span className=\"float-right text-secondary font-weight-light h6\">{calculateTime(comment.timestamp)}</span></h5>\r\n                            <p>{comment.text}</p>\r\n                        </Media.Body>\r\n                        {user._id===comment.commenterId ? \r\n                          <Dropdown>\r\n                          <Dropdown.Toggle as=\"image\">\r\n                            <FontAwesomeIcon icon={faDots} size=\"md\" />\r\n                          </Dropdown.Toggle>\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => setEditCommentForm(true)}>Edit Comment</Dropdown.Item>\r\n                            <Modal\r\n                                size=\"md\"\r\n                                show={editCommentForm}\r\n                                onHide={() => {setEditCommentForm(false); setNewComment(\"\")}}\r\n                                backdrop=\"static\"\r\n                            >\r\n                                <Modal.Header closeButton>\r\n                                <Modal.Title id=\"edit-comment\">\r\n                                    Edit your Comment\r\n                                </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                <Form>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Comment</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} placeholder={comment.text} onChange={(e) => setNewComment(e.target.value)} value={newComment}  />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={() => {setEditCommentForm(false); setNewComment(\"\")}}>Cancel</Button>\r\n                                    <Button variant=\"primary\" onClick={() => {\r\n                                                                        if (newComment && window.confirm(\"Are you sure you want to edit this comment ?\")) {\r\n                                                                          dispatch(editComment(post._id, comment._id, newComment));\r\n                                                                          setNewComment(\"\");\r\n                                                                          setEditCommentForm(false);\r\n                                                                        } else {\r\n                                                                          alert(\"Please fill the form!\")\r\n                                                                        }\r\n                                    }}>Edit Comment</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            <Dropdown.Item \r\n                            onClick={() => {\r\n                              if (window.confirm(\"Are you sure you want to delete this post ?\")) {\r\n                                dispatch(deleteComment(post._id, comment._id));;\r\n                              }\r\n                              }}>\r\n                              Delete Comment</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        : null}\r\n                        \r\n                      </Media>\r\n                    )}\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"text-center\">\r\n                <button style={{border: \"none\", backgroundColor: \"white\"}} ><FontAwesomeIcon icon={faShareSquare} size=\"lg\" /></button>\r\n              </div>\r\n            </Col> \r\n          </Row>\r\n        </Container>\r\n        <Media className=\"rounded bg-white mb-3 pt-3\">\r\n          <Image className=\"ml-3\" src={user.avatar} roundedCircle width={40} height={40} alt=\"Profile image\"/>\r\n          <Media.Body className=\"ml-3 mr-3 mb-3\">\r\n              <Form action=\"\" onSubmit={handleComment}>\r\n                  <Form.Group>\r\n                      <Form.Control as=\"textarea\" rows={3} className=\"bg-light\" onChange={(e) => setComment(e.target.value)} value={comment} placeholder={\"Write a comment...\"}/>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"float-right\" >\r\n                      Comment\r\n                  </Button>\r\n              </Form>\r\n          </Media.Body>\r\n        </Media>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {useState} from 'react';\r\nimport { useDispatch} from \"react-redux\";\r\n\r\nimport store from '../store';\r\n\r\nimport {Media, Image, Form, Button} from 'react-bootstrap';\r\n\r\nimport {addPost} from '../actions/postActions'\r\n\r\nfunction CreatePost() {\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n\r\n    const {user} = store.getState().user;\r\n    const dispatch = useDispatch();\r\n\r\n    const handlePost = (e) => {\r\n        e.preventDefault();\r\n        if (message || file ) {\r\n            const data = new FormData();\r\n            data.append('posterId', user._id);\r\n            data.append('message', message);\r\n            if (file) data.append(\"file\", file);\r\n        \r\n            dispatch(addPost(data));\r\n            setMessage(\"\");\r\n            setFile(null);\r\n        } else {\r\n          alert(\"Please Enter a message !\")\r\n        }\r\n    };\r\n    \r\n\r\n    return(\r\n        <Media className=\"rounded bg-white mb-3 pt-3\">\r\n            <Image className=\"ml-3\" src={user.avatar} roundedCircle width={40} height={40} alt=\"Profile image\"/>\r\n            <Media.Body className=\"ml-3 mr-3 mb-3\">\r\n                <Form action=\"\" onSubmit={handlePost}>\r\n                    <Form.Group>\r\n                        <Form.Control as=\"textarea\" rows={3} onChange={(e) => setMessage(e.target.value)} value={message} placeholder={\"What's on your mind, \" + user.lastName + \"?\"}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.File id=\"postImages\" label=\"Add an image to your Post\" onChange={(e) => setFile(e.target.files[0])} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"float-right\">\r\n                        Post\r\n                    </Button>\r\n                </Form>\r\n            </Media.Body>\r\n        </Media>\r\n    );\r\n}\r\n\r\n\r\nexport default CreatePost;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Image} from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LeftNavBar(props) {\r\n    return(\r\n        <div class=\"bg-white d-block pt-3 ml-3\">\r\n              <Link to={`/${props.id}`}><Image src={props.avatar} roundedCircle width=\"100\" height=\"100\" alt=\"\" className=\"mx-auto d-block\"/></Link>\r\n              \r\n              <h5 className=\"font-weight-bold text-center mt-3\">Welcome, {props.lastName}</h5>\r\n              <Link to={`/${props.id}`}><p class=\"text-center\">See Profile</p></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftNavBar;","import {Spinner} from 'react-bootstrap';\r\n\r\nfunction Loading() {\r\n    return(\r\n        <div className=\"text-center mt-5 pt-5\" >\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\n\r\nimport Post from '../../components/Post';\r\nimport CreatePost from '../../components/CreatePost'\r\nimport LeftNavBar from '../../components/LeftNavBar';\r\n\r\nimport {Row, Col, Container} from 'react-bootstrap';\r\nimport { faCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Loading  from '../../components/Loading';\r\n\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n  \r\n  const users = useSelector((state) => state.users);\r\n  const posts = useSelector((state) => state.posts);\r\n  const {user} = useSelector((state) => state.user);\r\n  \r\n  return (\r\n    <div className=\"home\">\r\n      {Object.keys(user).length && users.length && posts.length ? \r\n      <Container className=\"mt-3\">\r\n      <Row>\r\n        <Col id=\"profile-info\"> \r\n          <LeftNavBar id={user._id} avatar={user.avatar} lastName={user.lastName} />\r\n        </Col>\r\n        <Col xs={6} id=\"post\">\r\n          <CreatePost />\r\n          <div class=\"posts\">\r\n            {posts.map((post, index) => <Post post={{...post}} key={index} />)}\r\n          </div>\r\n        </Col>\r\n        <Col id=\"message\">\r\n          <h5>Contacts</h5>\r\n          {user.friendlist ? user.friendlist.map(friendId => \r\n            <a href=\"#contact\" className=\"contact\">\r\n            <div className=\"d-flex justify-content-between mb-2 pb-2 border-bottom\">\r\n              <div className=\"d-flex align-items-center hover-pointer\">\r\n                  <img className=\"img-xs rounded-circle\" src={ users.filter(user => user._id === friendId)[0]  ? users.filter(user => user._id === friendId)[0].avatar : null } alt=\"\" />\r\n                  <div className=\"ml-2 pt-3\">\r\n                      <p>{ users.filter(user => user._id === friendId)[0] ? users.filter(user => user._id === friendId)[0].firstName + \" \" + users.filter(user => user._id === friendId)[0].lastName : null }</p>\r\n                      \r\n                  </div>\r\n              </div>\r\n              <FontAwesomeIcon icon={faCircle} size=\"sm\" color=\"green\" className=\"m-auto\"/>\r\n            </div>\r\n          </a>\r\n          ) : null }\r\n          \r\n        </Col>\r\n      </Row>\r\n    </Container> :\r\n    <Loading />}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home; \r\n","import axios from 'axios';\r\nimport {ACCEPT_INVITATION, GET_USER, LOGIN, LOGOUT, UPDATE_USER, UPLOAD_PICTURE} from './types';\r\n\r\nexport const login = (email, password) => dispatch => {\r\n    axios\r\n        .post('/api/users/login', {email, password})\r\n        .then(res => {\r\n            console.log(res.data.user);\r\n            dispatch(getUser(res.data.user));\r\n            dispatch({\r\n            type: LOGIN\r\n        })})\r\n        .catch((err) => alert(\"Email or Password incorrect !\"))\r\n\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    \r\n    axios\r\n        .get('/api/users/logout')\r\n        .catch((err) => {console.log('logout...');\r\n        dispatch({\r\n            type: LOGOUT\r\n        })});\r\n\r\n};\r\n\r\nexport const verifyUser = () => dispatch => {\r\n    axios\r\n        .get('/jwtid')\r\n        .then(res => {\r\n            dispatch(getUser(res.data));\r\n            dispatch({\r\n            type: LOGIN\r\n        })})\r\n        .catch(err => console.log(err));\r\n\r\n};\r\n\r\n\r\nexport const getUser = id => dispatch => {\r\n    axios\r\n        .get(`/api/users/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n            type: GET_USER,\r\n            payload: res.data\r\n        })});\r\n};\r\n\r\nexport const updateUser = (userId, biographie, firstName, lastName) => {\r\n    return (dispatch) => {\r\n      axios\r\n        .put(`/api/users/${userId}`, {biographie, firstName, lastName})\r\n        .then((res) => {\r\n          dispatch({ type: UPDATE_USER, payload: {biographie, firstName, lastName} });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n  };\r\n\r\nexport const uploadPicture = (data) => {\r\n    return (dispatch) => {\r\n        axios\r\n        .post(`/api/users/upload`, data)\r\n        .then(res => {\r\n            dispatch({ type: UPLOAD_PICTURE, payload: res.data.picture });\r\n            console.log(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const acceptInvitaion = (senderId, receiverId) => dispatch => {\r\n  axios\r\n      .patch(`/api/users/friends/${senderId}`, {\"id\" : receiverId})\r\n      .then(res => {\r\n          dispatch({\r\n          type: ACCEPT_INVITATION,\r\n          payload: {senderId, receiverId}\r\n      })})\r\n      .catch((err) => console.log(err));\r\n      \r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { GET_USERS, SEND_INVITATION} from './types';\r\n\r\nexport const getUsers = () => dispatch => {\r\n    axios\r\n        .get('/api/users/')\r\n        .then(res => {\r\n            dispatch({\r\n            type: GET_USERS,\r\n            payload: res.data\r\n        })});\r\n};\r\n\r\nexport const sendInvitaion = (senderId, receiverId) => dispatch => {\r\n    axios\r\n        .patch(`/api/users/invitations/${receiverId}`, {\"id\" : senderId})\r\n        .then(res => {\r\n            dispatch({\r\n            type: SEND_INVITATION,\r\n            payload: {senderId, receiverId}\r\n        })})\r\n        .catch((err) => console.log(err));\r\n        \r\n};\r\n\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Profile.css';\r\n\r\nimport {Row, Col, Container, Modal, Button,Image, Form} from 'react-bootstrap';\r\nimport { faUserPlus, faUserCheck, faUserTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { useState } from 'react'\r\nimport {Link, useParams} from 'react-router-dom';\r\n\r\n\r\nimport Post from '../../components/Post';\r\nimport CreatePost from '../../components/CreatePost'\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getUser, updateUser, uploadPicture} from '../../actions/userActions';\r\nimport {getUsers, sendInvitaion} from '../../actions/usersActions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Loading from '../../components/Loading';\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {profileId} = useParams();\r\n    const users = useSelector((state) => state.users);\r\n    const posts = useSelector((state) => state.posts);\r\n    const {user} = useSelector((state) => state.user);\r\n\r\n    const [editProfile, setEditProfile] = useState(false);\r\n    const [newFirstName, setNewFirstName] = useState(\"\");\r\n    const [newLastName, setNewLastName] = useState(\"\");\r\n    const [newBio, setNewBio] = useState(\"\");\r\n    const [file, setFile] = useState(null)\r\n\r\n    return(\r\n        <Container>\r\n            {Object.keys(user).length && users.length ? \r\n            <div className=\"profile-page tx-13\">\r\n            <Row>\r\n                <div className=\"col-12 grid-margin\">\r\n                    <div className=\"profile-header\">\r\n                        <div className=\"cover\">\r\n                            <div className=\"gray-shade\"></div>\r\n                            <figure>\r\n                                <img src=\"cover.jpg\" className=\"img-fluid h-25\" alt=\"profile cover\" />\r\n                            </figure>\r\n                            <div className=\"cover-body d-flex justify-content-between align-items-center\">\r\n                                <div>\r\n                                    <Image width={70} height={70} roundedCircle src={ users.filter(user => user._id === profileId)[0] ? users.filter(user => user._id === profileId)[0].avatar : null } alt=\"\" />\r\n                                    <span className=\"profile-name\">{ users.filter(user => user._id === profileId)[0] ? users.filter(user => user._id === profileId)[0].firstName + \" \" + users.filter(user => user._id === profileId)[0].lastName : null }</span>\r\n                                </div>\r\n                                { user._id === profileId ? <div className=\"d-none d-md-block\">\r\n                                    <Button variant=\"primary\" className=\"btn-icon-text btn-edit-profile\" onClick={() => setEditProfile(true)}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-edit btn-icon-prepend\">\r\n                                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\r\n                                            <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\r\n                                        </svg> Edit profile\r\n                                    </Button>\r\n                                    <Modal\r\n                                        size=\"lg\"\r\n                                        show={editProfile}\r\n                                        onHide={() => {setEditProfile(false);setNewBio(\"\");setNewFirstName(\"\");setNewLastName(\"\");}}\r\n                                        backdrop=\"static\"\r\n                                        aria-labelledby=\"edit-profile\"\r\n                                    >\r\n                                        <Modal.Header closeButton>\r\n                                        <Modal.Title id=\"edit-profile\">\r\n                                            Edit your profile\r\n                                        </Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                        <Form className=\"text-center\">\r\n                                            <Form.Group className>\r\n                                                <Form.Label><Image src={user.avatar} roundedCircle width=\"200\" height=\"200\" alt=\"Profile image\" className=\"mx-auto d-block\"/></Form.Label>\r\n                                                <div className=\"d-block w-100 mt-3\"><input className=\"text-center\" type=\"file\" onChange={(e) => setFile(e.target.files[0])}/></div>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row} className=\"mt-5 ml-5\">\r\n                                                <Form.Label column sm=\"2\">\r\n                                                First Name : \r\n                                                </Form.Label>\r\n                                                <Col sm=\"8\">\r\n                                                <Form.Control type=\"text\" value={newFirstName} onChange={(e) => setNewFirstName(e.target.value)} placeholder={user.firstName} />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row} className=\"mt-5 ml-5\">\r\n                                                <Form.Label column sm=\"2\">\r\n                                                Last Name : \r\n                                                </Form.Label>\r\n                                                <Col sm=\"8\">\r\n                                                <Form.Control type=\"text\" value={newLastName} onChange={(e) => setNewLastName(e.target.value)} placeholder={user.lastName} />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row} className=\"mt-5 ml-5\">\r\n                                                <Form.Label column sm=\"2\">\r\n                                                Biography : \r\n                                                </Form.Label>\r\n                                                <Col sm=\"8\">\r\n                                                <Form.Control as=\"textarea\" rows={3} value={newBio} onChange={(e) => setNewBio(e.target.value)} placeholder={user.biographie} />\r\n                                                </Col>\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={() => {setEditProfile(false);setNewBio(\"\");setNewFirstName(\"\");setNewLastName(\"\");}}>Cancel</Button>\r\n                                            <Button variant=\"primary\" \r\n                                                onClick={() => {\r\n                                                    if (newFirstName && newLastName && newBio && window.confirm(\"Are you sure you want to edit this profile ?\")) {\r\n                                                        dispatch(updateUser(user._id, newBio, newFirstName, newLastName));\r\n                                                        dispatch(getUsers())\r\n                                                        dispatch(getUser(user._id))\r\n                                                        if ( file ) {\r\n                                                            const data = new FormData();\r\n                                                            data.append('userId', user._id);\r\n                                                            data.append('pseudo', user.pseudo);\r\n                                                            data.append(\"file\", file);\r\n                                                        \r\n                                                            dispatch(uploadPicture(data));\r\n                                                            setFile(null);\r\n                                                        }\r\n                                                        setNewBio(\"\");\r\n                                                        setNewFirstName(\"\");\r\n                                                        setNewLastName(\"\");\r\n                                                        setEditProfile(false);\r\n                                                    } else {\r\n                                                        alert(\"Please fill the form!\")\r\n                                                    }\r\n                                                }}\r\n                                            >Save changes</Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                                </div> \r\n                                : users.filter(user => user._id === profileId)[0].friendlist.find(id => id === user._id) ? \r\n                                <div className=\"d-none d-md-block\">\r\n                                    <Button variant=\"primary\" className=\"btn-icon-text btn-edit-profile\" >\r\n                                        <FontAwesomeIcon icon={faUserCheck} color=\"white\" className=\"mr-2\" /> \r\n                                        Friends\r\n                                    </Button> \r\n                                </div> : users.filter(user => user._id === profileId)[0].invitationlist.find(id => id === user._id) ?\r\n                                <div className=\"d-none d-md-block\">\r\n                                    <Button variant=\"primary\" className=\"btn-icon-text btn-edit-profile\" >\r\n                                        <FontAwesomeIcon icon={faUserTimes} color=\"white\" className=\"mr-2\" /> \r\n                                        Cancel Request\r\n                                    </Button> \r\n                                </div> :\r\n                                <div className=\"d-none d-md-block\">\r\n                                    <Button \r\n                                        variant=\"primary\" \r\n                                        className=\"btn-icon-text btn-edit-profile\"\r\n                                        onClick = {() => {\r\n                                            dispatch(sendInvitaion(user._id, profileId));\r\n                                        }} \r\n                                        >\r\n                                        <FontAwesomeIcon icon={faUserPlus} color=\"white\" className=\"mr-2\" /> \r\n                                        Add Friend\r\n                                    </Button> \r\n                                </div> }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"header-links\">\r\n                            <ul className=\"links d-flex align-items-center mt-3 mt-md-0\">\r\n                                <li className=\"header-link-item d-flex align-items-center active\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-columns mr-1 icon-md\">\r\n                                        <path d=\"M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18\"></path>\r\n                                    </svg>\r\n                                    <a className=\"pt-1px d-none d-md-block\" href=\"#\">Timeline</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n            <Row className=\"profile-body\">\r\n                \r\n                <div className=\"d-none d-md-block col-md-4 col-xl-3 left-wrapper\">\r\n                    <div className=\"card rounded\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                <h6 className=\"card-title mb-0\">About</h6>\r\n                            </div>\r\n                            <p>{user.biographie}</p>\r\n                            <div className=\"mt-3\">\r\n                                <label className=\"tx-11 font-weight-bold mb-0 text-uppercase\">Biography :</label>\r\n                                <p className=\"text-muted\">{ users.filter(user => user._id === profileId)[0] ? users.filter(user => user._id === profileId)[0].biographie : null }</p>\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <label className=\"tx-11 font-weight-bold mb-0 text-uppercase\">Joined :</label>\r\n                                <p className=\"text-muted\">{ users.filter(user => user._id === profileId)[0] ? users.filter(user => user._id === profileId)[0].createdAt : null }</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8 col-xl-6 middle-wrapper\">\r\n                    { user._id === profileId ? <CreatePost /> : null }\r\n                    <div className=\"posts\">\r\n                        {posts.filter(post => post.posterId === profileId).map((post, index) => <Post post={post} key={index} />)}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"d-none d-xl-block col-xl-3 right-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 grid-margin\">\r\n                            <div className=\"card rounded\">\r\n                                <div className=\"card-body\">\r\n                                    <h6 className=\"card-title\">Friends ({ users.filter(user => user._id === profileId)[0] ? users.filter(user => user._id === profileId)[0].friendlist.length : null })</h6>\r\n                                    { users.filter(user => user._id === profileId)[0].friendlist.map(friendId => \r\n                                        <Link to={`/${friendId}`}>\r\n                                            <div className=\"d-flex justify-content-between mb-2 pb-2 border-bottom\">\r\n                                                <div className=\"d-flex align-items-center hover-pointer\">\r\n                                                    <img className=\"img-xs rounded-circle\" src={ users.filter(user => user._id === friendId)[0] ? users.filter(user => user._id === friendId)[0].avatar : null} alt=\"\" />\r\n                                                    <div className=\"ml-2 pt-3\">\r\n                                                        <p>{ users.filter(user => user._id === friendId)[0] ? users.filter(user => user._id === friendId)[0].firstName + \" \" + users.filter(user => user._id === friendId)[0].lastName : null }</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )} \r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        </div> :\r\n        <Loading />}\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Navbar,  Nav } from 'react-bootstrap';\r\n\r\n\r\n\r\nimport { faSearch, faHome, faCommentDots, faUsers, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { logout } from '../actions/userActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nfunction AppNavBar() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isLogged = useSelector(state => state.user).user;\r\n\r\n    \r\n\r\n    return(\r\n        <Navbar className=\"navbar navbar-expand-lg\" bg=\"white\" sticky=\"top\" >\r\n            <Navbar.Brand href=\"/\">\r\n                <img\r\n                alt=\"\"\r\n                src=\"logochatty.png\"\r\n                width=\"40\"\r\n                height=\"40\"\r\n                className=\"d-inline-block align-middle\"\r\n                />{' '}\r\n                <span className=\"align-middle\">Chatty</span>\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"align-middle\">\r\n                {/* <div>\r\n                    <InputGroup>\r\n                        <FormControl className=\"border-0\" type=\"text\" placeholder=\"Search\" />\r\n                        <InputGroup.Append>\r\n                        <Button  variant=\"outline-secondary\" className=\"bg-white border-0\" ><FontAwesomeIcon icon={faSearch} /></Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div> */}\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"/\"><FontAwesomeIcon icon={faHome} size=\"lg\" /></Nav.Link>\r\n                    <Nav.Link href=\"#chat\"><FontAwesomeIcon icon={faCommentDots} size=\"lg\" /></Nav.Link>\r\n                    <Nav.Link href=\"/users\"><FontAwesomeIcon icon={faUsers} size=\"lg\" /></Nav.Link>\r\n                    \r\n                    <Nav.Link  href=\"/login\"\r\n                    onClick={() => {\r\n                        dispatch(logout());\r\n\r\n                    }} \r\n                    className=\"ml-5 float-right\"><FontAwesomeIcon icon={faSignOutAlt} size=\"lg\" /></Nav.Link>\r\n                    {!isLogged ? <Redirect to=\"/login\" /> : null}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\nexport default AppNavBar;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Row, Col, Container, InputGroup, FormControl, Button, Image} from 'react-bootstrap';\r\nimport { faSearch, faCheckSquare} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport LeftNavBar from '../../components/LeftNavBar';\r\n\r\nimport store from '../../store';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport {acceptInvitaion} from '../../actions/userActions'\r\nimport Loading from '../../components/Loading';\r\n\r\nfunction Users() {\r\n\r\n    const dispatch = useDispatch();\r\n    const {user} = useSelector((state) => state.user);\r\n    const users = store.getState().users; \r\n\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        \r\n    });\r\n\r\n    return(\r\n        <Container className=\"mt-3\" fluid=\"sm\">\r\n            {users.length ? <Row>\r\n                <Col xs={3} id=\"profile-info\"> \r\n                    <LeftNavBar id={user._id} avatar={user.avatar} lastName={user.lastName} />\r\n                </Col>\r\n                <Col id=\"post\">\r\n                    <Container className=\"bg-white\" fluid>\r\n                        <InputGroup className=\"pb-3\">\r\n                            <FormControl className=\"border-0 bg-light mt-3 pb-3\" value={search} onChange={(e) => setSearch(e.target.value)} type=\"text\" placeholder=\"Search\" />\r\n                            <InputGroup.Append>\r\n                            <Button  variant=\"outline-secondary\" className=\"bg-ligh border-0 mt-3\" ><FontAwesomeIcon icon={faSearch} /></Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                        {search ? \r\n                                users.filter(user => (user.firstName+\" \"+user.lastName).includes(search)).length ? \r\n                                    users.filter(user => (user.firstName+\" \"+user.lastName).toLowerCase().includes(search.toLowerCase())).map(user => \r\n                                        <a href={\"/\"+user._id} className=\"contact\">\r\n                                            <div className=\"d-flex justify-content-between mb-2 pb-2 border-bottom ml-3\">\r\n                                                <div className=\"d-flex align-items-center hover-pointer\">\r\n                                                    <Image className=\"img-fluid rounded-circle\" width={60} height={60} src={user.avatar} alt=\"\" />\r\n                                                    <div className=\"ml-3\">\r\n                                                        <h6>{user.firstName + \" \" + user.lastName}</h6>  \r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </a>) \r\n                                    : <div className=\"text-center mt-5 pb-5\"><h6>There is no user with the name \"{search}\"</h6></div>\r\n                                : users.map(user => \r\n                                    <a href={\"/\"+user._id} className=\"contact\">\r\n                                        <div className=\"d-flex justify-content-between mb-2 pb-2 border-bottom ml-3\">\r\n                                            <div className=\"d-flex align-items-center hover-pointer\">\r\n                                                <Image className=\"img-fluid rounded-circle\" width={60} height={60} src={user.avatar} alt=\"\" />\r\n                                                <div className=\"ml-3\">\r\n                                                    <h6>{user.firstName + \" \" + user.lastName}</h6>  \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </a>)    }                     \r\n                    </Container>\r\n                </Col>\r\n                <Col xs={3} className=\"bg-white mr-3\">\r\n                    <h5 className=\"text-center mt-3\">Invitations</h5>\r\n                    {user.invitationlist ? user.invitationlist.map(friendId => \r\n                        <div className=\"d-flex justify-content-between mb-2 pb-2 border-bottom\">\r\n                                <div className=\"d-flex align-items-center hover-pointer\">\r\n                                    <img className=\"img-xs rounded-circle\" src={ users.filter(user => user._id === friendId)[0].avatar } alt=\"\" />\r\n                                    <div className=\"ml-2 pt-3\">\r\n                                        <p>{ users.filter(user => user._id === friendId)[0].firstName + \" \" + users.filter(user => user._id === friendId)[0].lastName }</p>\r\n                                    </div>\r\n                                </div>\r\n                            <button \r\n                                className=\"border-0 bg-white\"\r\n                                onClick = {() => {\r\n                                    dispatch(acceptInvitaion(friendId, user._id));\r\n                                }}\r\n                            >\r\n                                <FontAwesomeIcon icon={faCheckSquare} size=\"lg\" color=\"green\"/>\r\n                            </button>\r\n                        </div>\r\n                        \r\n                    ) : null }\r\n                    \r\n                </Col>\r\n            </Row> \r\n            : <Loading />}\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Users;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from \"react\";\nimport \"./login.scss\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../actions/userActions\";\nimport {Form, Button} from 'react-bootstrap';\n\nfunction Login() {\n\n  const dispatch = useDispatch();\n  const isLogged = useSelector((state) => state.user).isLogged;\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [loading, setLoading] = useState(false);\n\n  \n    return (\n      <div className=\"background\">\n      <div className=\"base-container\" >\n        <div className=\"header\">Login to Chatty</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src=\"./login.svg\" alt=\"\"/>\n          </div>\n          <Form>\n            <Form.Group>\n              <Form.Control className=\"loginInput mt-3\"  placeholder=\"Email\" \n              type=\"email\"\n              required\n              value={email} \n              onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n            <Form.Group >\n              <Form.Control placeholder=\"Password\"\n              type=\"password\"\n              required\n              className=\"loginInput\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)} />\n            </Form.Group>\n          </Form>\n        </div>\n        <Button variant=\"primary\" type=\"submit\" \n        onClick={()=> {\n          console.log(\"Login...\");\n          \n          if (email && password) {\n            setLoading(true);\n            dispatch(login(email, password));\n          } else {\n            alert(\"Please Enter your email and password !\")\n          }\n        }}>\n          {loading ? \n                isLogged ? <Redirect to=\"/\" /> : <Loading />\n                : (\n                  \"Log In\"\n                )}\n        </Button>\n        <Link to=\"/register\" >\n          <Button variant=\"primary\">Register</Button>\n        </Link>\n      </div>\n      </div>\n    );\n};\n\nexport default Login;\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./register.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect} from \"react-router\";\nimport {Form, Button} from 'react-bootstrap';\n\nexport default function Register() {\n  \n  const [username, setUsername] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatedPassword, setRepeatedPassword] = useState(\"\");\n  const [register, setRegister] = useState(false);\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    console.log({\"psuedo\" : username, firstName, lastName, email, password});\n    if (username && firstName && lastName && email && password) {\n      if (password === repeatedPassword) {\n        axios\n          .post(\"/api/users/register\", {\"pseudo\" : username, firstName, lastName, email, password})\n          .then(res => setRegister(true));\n      } else alert(\"passwords are not identical !\")\n      \n    } else alert(\"Please enter all informations !\")\n    \n    }\n\n\n \n    return (\n      <div className=\"background\">\n      <div className=\"base-container\" >\n       <div className=\"logo\"></div>\n        <div className=\"header\">Register</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src=\"./login.svg\" alt=\"\" />\n          </div>\n          <Form onSubmit={handleRegister}>\n            <Form.Group>\n              <Form.Control className=\"loginInput mt-3\"  placeholder=\"Username\" \n              type=\"username\"\n              required\n              value={username} \n              onChange={(e) => setUsername(e.target.value)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control className=\"loginInput mt-3\"  placeholder=\"First Name\" \n              type=\"text\"\n              required\n              value={firstName} \n              onChange={(e) => setFirstName(e.target.value)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control className=\"loginInput mt-3\"  placeholder=\"Last Name\" \n              type=\"text\"\n              required\n              value={lastName} \n              onChange={(e) => setLastName(e.target.value)}/>\n            </Form.Group>\n            <Form.Group>\n              <Form.Control className=\"loginInput mt-3\"  placeholder=\"Email\" \n              type=\"email\"\n              required\n              value={email} \n              onChange={(e) => setEmail(e.target.value)}/>\n            </Form.Group>\n            <Form.Group >\n              <Form.Control placeholder=\"Password\"\n              type=\"password\"\n              required\n              minLength=\"6\"\n              className=\"loginInput\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Control placeholder=\"Repeat password\"\n              type=\"password\"\n              required\n              minLength=\"6\"\n              className=\"loginInput\"\n              value={repeatedPassword}\n              onChange={(e) => setRepeatedPassword(e.target.value)} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" className=\"text-center\" >Register</Button>\n          </Form>\n        </div>\n        <Link to=\"/login\" >\n          <Button>Login</Button>\n        </Link>\n        {register ? <Redirect to='/login' /> : null}\n      </div>\n      </div>\n    );\n  }\n","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home/Home';\nimport Profile from './pages/profile/Profile';\nimport AppNavbar from './components/AppNavBar';\nimport Users from './pages/users/Users';\nimport Login from './pages/login/Login';\nimport Register from './pages/register/Register';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getUsers} from './actions/usersActions';\nimport {getPosts} from './actions/postActions';\nimport { verifyUser} from './actions/userActions';\nimport Cookies from 'js-cookie';\n\n\nconst App = () => {\n\n  const jwt = Cookies.get('jwt');\n\n  const dispatch = useDispatch();\n  dispatch(getUsers());\n  dispatch(getPosts());\n  dispatch(verifyUser());\n\n  const isLogged = useSelector(state => state.user).isLogged;\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>{jwt || isLogged ? <><AppNavbar /><Home /></> : <Redirect to=\"/login\"/>}</Route>\n        <Route path=\"/login\" exact><Login /></Route>\n        <Route path=\"/register\" exact><Register /></Route>\n        <Route path=\"/users\" exact>{jwt || isLogged ? <><AppNavbar /><Users /></> : <Redirect to=\"/login\"/>}</Route>\n        {/* <Route path=\"/profile\" exact component={Profile} /> */}\n        <Route path=\"/:profileId\" >{jwt || isLogged ? <><AppNavbar /><Profile /></> : <Redirect to=\"/login\"/>}</Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider} from 'react-redux';\nimport store from './store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}